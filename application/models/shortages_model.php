<?phpclass shortages_model extends CI_Model {    public function __construct(){        parent::__construct();    }    public function get_trips()    {        include_once(APPPATH."models/helperClasses/TripWithNoShortageGiven.php");        $this->db->select('*');        $this->helper_model->search("Add_Shortages_Search_Form","shortages");        $this->db->limit(150);        $result = $this->db->get('trips_with_no_shortage_given_view')->result();        $trips_with_no_shortage_given = [];        foreach($result as $trip)        {            $trips_with_no_shortage_given[] = new TripWithNoShortageGiven($trip);        }        return $trips_with_no_shortage_given;    }    public function destination()    {        $sorting_info = Sort::columns('shortages');        $this->db->select("*");        $this->helper_model->search("Shortages_Search_Form","shortages");        $this->helper_model->sort($sorting_info);        return $this->db->get('destination_shortages_view')->result();    }    public function decanding()    {        $sorting_info = Sort::columns('shortages');        $this->db->select("*");        $this->helper_model->search("Shortages_Search_Form","shortages");        $this->helper_model->sort($sorting_info);        return $this->db->get('decanding_shortages_view')->result();    }    public function commit()    {        include_once(APPPATH."models/helperClasses/CommitShortages.php");        $data = [            'shortage_ids' => $_POST['shortage_ids'],            'commit_date' => $_POST['commit_date'],            'agent_type' => $_POST['agent_type'],            'agent_id' => $_POST['agent_id'],        ];        $commit_manager = new CommitShortages($data);        return $commit_manager->letTheGameBegin();    }    public function find($id)    {        $this->db->select('*');        $this->db->where('id', $id);        $result = $this->db->get('shortages')->result();        if(sizeof($result) > 0)            return $result[0];        return null;    }    public function update_shortage()    {        $data = [            'id' => $_POST['shortage_id'],            'date'=>$_POST['date'],            'quantity' => $_POST['quantity'],            'rate' => $_POST['rate']        ];        $this->db->where('id',$_POST['shortage_id']);        $result = $this->db->update('shortages',$data);        if($result)            return (new ShortageUpdated($_POST['shortage_id']))->fire();        else            return null;    }    public function getById($id){        $this->db->select('*');        $this->db->where('id',$id);        $result = $this->db->get('shortages')->result();        return (sizeof($result) > 0)?$result[0]:null;    }    public function delete_shortage($shortage_id)    {      /*$this->db->select('shortages.trip_detail_id, trips_details.trip_id');        $this->db->join('trips_details','trips_details.id = shortages.trip_detail_id','left');        $this->db->where('shortages.id',$shortage_id);        $result = $this->db->get('shortages')->result();        $trip_id = $result[0]->trip_id;        $trip_detail_id = $result[0]->trip_detail_id;*/        $shortage = $this->getById($shortage_id);        $this->db->trans_start();        //deleting shortage        $this->db->where('id',$shortage_id);        $this->db->delete('shortages');        // firing event : shortage deleted.        (new ShortageDeleted($shortage))->fire();        return $this->db->trans_complete();    }}