<?phpclass ManageFreights_Model extends CI_Model {    public function __construct(){        parent::__construct();    }    public function pending_freights($date, $days){        include_once(APPPATH."models/helperClasses/Company_Accounts_Data.php");        include_once(APPPATH."models/helperClasses/Trip_Details.php");        $date = $this->carbon->createFromFormat('Y-m-d', $date);        $date_limit = easyDate($date->subDays($days));        $this->db->select('trips.id as trip_id');        $this->db->distinct();        $this->db->from('trips');        $this->db->join('trips_details','trips_details.trip_id = trips.id');        $this->db->join('customer_accounts','customer_accounts.trip_detail_id = trips_details.id','left');        $this->db->where(array(            'trips.entryDate <='=>$date_limit,            'customer_accounts.amount'=>null,        ));        $trips = $this->db->get()->result();        $final_trips = array();        foreach($trips as $trip){            array_unshift($final_trips, new Company_Accounts_Data(new Trip_Details($trip)));        }        return $final_trips;    }    /*     * below is about customers accounts and payments     */    public function customer_payments($trip_id='', $customer_id){        if($trip_id == ''){            $query = $this->db->get_where('customer_accounts', array('customer_id', $customer_id));        }else{            $query = $this->db->get_where('customer_accounts', array('trip_id'=>$trip_id, 'customer_id'=>$customer_id));        }        $result = $query->result();        return $result;    }    public function company_payments($trip_id='', $company_id){        if($trip_id == ''){            $query = $this->db->get_where('company_accounts', array('company_id', $company_id));        }else{            $query = $this->db->get_where('company_accounts', array('trip_id'=>$trip_id, 'company_id'=>$company_id));        }        $result = $query->result();        return $result;    }    public function contractor_payments($trip_id='', $contractor_id){        if($trip_id == ''){            $query = $this->db->get_where('contractor_accounts', array('contractor_id', $contractor_id));        }else{            $query = $this->db->get_where('contractor_accounts', array('trip_id'=>$trip_id, 'contractor_id'=>$contractor_id));        }        $result = $query->result();        return $result;    }    public function add_customer_payment(){        $payment_date = (easyDate($this->input->post('payment_date')) == '1970-01-01')? '0000-00-00': easyDate($this->input->post('payment_date'));        $data = array(            'trip_id'=>$this->input->post('trip_id'),            'customer_id'=>$this->input->post('customer_id'),            'payment_date'=>$payment_date,            'amount'=>$this->input->post('amount'),            'entryDate' => $this->carbon->now(new DateTimeZone('Asia/Karachi'))->toDateTimeString(),        );        $result = $this->db->insert('customer_accounts', $data);        if($result == true){            return true;        }else{            return false;        }    }    public function add_contractor_payment(){        $payment_date = (easyDate($this->input->post('payment_date')) == '1970-01-01')? '0000-00-00': easyDate($this->input->post('payment_date'));        $data = array(            'trip_id'=>$this->input->post('trip_id'),            'contractor_id'=>$this->input->post('contractor_id'),            'payment_date'=>$payment_date,            'amount'=>$this->input->post('amount'),            'entryDate' => $this->carbon->now(new DateTimeZone('Asia/Karachi'))->toDateTimeString(),        );        $result = $this->db->insert('contractor_accounts', $data);        if($result == true){            return true;        }else{            return false;        }    }    public function add_company_payment(){        $payment_date = (easyDate($this->input->post('payment_date')) == '1970-01-01')? '0000-00-00': easyDate($this->input->post('payment_date'));        $data = array(            'trip_id'=>$this->input->post('trip_id'),            'company_id'=>$this->input->post('company_id'),            'payment_date'=>$payment_date,            'amount'=>$this->input->post('amount'),            'entryDate' => $this->carbon->now(new DateTimeZone('Asia/Karachi'))->toDateTimeString(),        );        $result = $this->db->insert('company_accounts', $data);        if($result == true){            return true;        }else{            return false;        }    }    public function customer($c_id, $month){        include_once(APPPATH."models/helperClasses/Customer_Accounts_Data.php");        include_once(APPPATH."models/helperClasses/Trip_Details.php");        $this->db->select("trips.id as trip_id");        $this->db->like('entryDate', $month."-", 'after');        $this->db->where(array(            'customer_id'=>$c_id,        ));        $this->db->from('trips');        //$this->db->join('trips_details','trips_details.trip_id = trips.id');        $trips = $this->db->get()->result();        $final_trips = array();        foreach($trips as $trip){            array_unshift($final_trips, new Customer_Accounts_Data(new Trip_Details($trip)));        }        return $final_trips;    }    public function company($c_id, $month){        include_once(APPPATH."models/helperClasses/Company_Accounts_Data.php");        include_once(APPPATH."models/helperClasses/Trip_Details.php");        $this->db->like('entryDate', $month."-", 'after');        $this->db->select('trips.id as trip_id');        $this->db->where(array(            'company_id'=>$c_id,        ));        $trips = $this->db->get('trips')->result();        $final_trips = array();        foreach($trips as $trip){            array_unshift($final_trips, new Company_Accounts_Data(new Trip_Details($trip)));        }        return $final_trips;    }    public function contractor($c_id, $month){        include_once(APPPATH."models/helperClasses/Contractor_Accounts_Data.php");        include_once(APPPATH."models/helperClasses/Trip_Details.php");        $this->db->select('trips.id as trip_id');        $this->db->like('entryDate', $month."-", 'after');        $this->db->where(array(            'contractor_id'=>$c_id,        ));        $trips = $this->db->get('trips')->result();        $final_trips = array();        foreach($trips as $trip){            array_unshift($final_trips, new Contractor_Accounts_Data(new Trip_Details($trip)));        }        return $final_trips;    }}