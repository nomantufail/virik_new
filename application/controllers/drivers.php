<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');include_once(APPPATH."controllers/parentController.php");class Drivers extends ParentController {    //public variables...    public function __construct()    {        parent::__construct();    }    /* The default function that gets called when visiting the page */    public function index($section = '')    {        $name = (isset($_GET['driver']))?$_GET['driver']:'';        $keys = array(            'name'=>$name,        );        //defining the sorting column        $sort = array(            'sort_by'=>(isset($_GET['sort_by']))?$_GET['sort_by']:'entryDate',            'order' => (isset($_GET['order']))?$_GET['order']:'asc',        );        ///////////////////////////////////////////////////////////////        //counting total agents        $num_other_agents = $this->drivers_model->count_searched_drivers($keys);        $num_other_agents = ($num_other_agents == 0)?1:$num_other_agents;        $config = $this->helper_model->pagination_configs("drivers/index/?", "drivers", $num_other_agents);        $this->pagination->initialize($config);        $pageNumber = 0;        if(isset($_GET['page'])){            $pageNumber = $_GET['page'];            if($pageNumber>=0){$pageNumber = $pageNumber;}else{ $pageNumber = 0;}        }        $headerData = array(            'title' => 'Virik-Logistics | Drivers',            'page' => 'drivers',        );        $bodyData = array(            'drivers' => '',            'section' => '',            'someMessage' => '',            'pages' => $this->pagination->create_links(),            'columns' => array(),        );        if($section == '' || $section == 'all'){$bodyData['section'] = 'all';}else if($section== 'add'){ $bodyData['section'] = 'add';}        //deleting the customer*****************//        if(isset($_GET['del'])){            $_POST['del'] = $_GET['del'];            $this->form_validation->set_rules('del', 'Delete Driver', 'required|numeric|callback__validate_driver_deleting');            if ($this->form_validation->run() == true)            {                if( $this->helper_model->delete_record('drivers',$_GET['del']) == true){                    $bodyData['someMessage'] = array('message'=>'Driver Deleted Successfully!', 'type'=>'alert-success');                }else{                    $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                }            }        }        //////////////////////////////////////////////////////////        if(isset($_POST['addDriver'])){            if($this->form_validation->run('add_driver') == true){                if( $this->drivers_model->add_driver() == true){                    $bodyData['someMessage'] = array('message'=>'Driver Added Successfully!', 'type'=>'alert-success');                }else{                    $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                }            }        }        $bodyData['drivers'] = $this->drivers_model->search_limited_drivers($config["per_page"], $pageNumber, $keys, $sort);        if(isset($_GET['print'])){            if(isset($_POST['check'])){                $bodyData['drivers'] = $this->helper_model->filter_records($bodyData['drivers'], $_POST['check'],"id");            }            if(isset($_POST['column'])){                $bodyData['columns'] = $_POST['column'];            }            $this->load->view('drivers/components/print_drivers', $bodyData);        }else{            $this->load->view('components/header', $headerData);            $this->load->view('drivers/welcome', $bodyData);            $this->load->view('components/footer');        }    }    public function profile($c_id = '', $req ='' )    {        if($c_id == ''){            $this->index();        }else{            $headerData = array(                'title' => 'Virik-Logistics | Drivers | Profile',                'page' => 'drivers',            );            $bodyData = array(                'profile' => $this->drivers_model->driver($c_id),            );            $bodyData['drivers'] = $this->drivers_model->drivers();            $this->load->view('components/header', $headerData);    //HEADER DATA            //check if we some data received of not against the request?            if($bodyData['profile'] != ''){                $this->load->view('drivers/profile', $bodyData);            }else{                $this->load->view('components/recordNotFound');            }            $this->load->view('components/footer');     //footer data        }    }    //it was used before  and may be needed again    public function accounts($c_id = '' , $section = '')    {        if($c_id == ''){            $this->index();        }else{            $this->load->model('accounts_model');            $headerData = array(                'title' => 'Virik-Logistics | Drivers | Accounts',                'page' => 'drivers',            );            $bodyData = array(                'accounts' => '',                'profile' => $this->drivers_model->driver($c_id),                'someMessage' => '',                'section'=>'',            );            if($section == '' || $section == 'all'){$bodyData['section'] = 'all';}else if($section== 'add'){ $bodyData['section'] = 'add';}            $this->load->view('components/header', $headerData);            if($this->form_validation->run('add_driver_expense') == true){                if( $this->drivers_model->add_expense($c_id) == true){                    $bodyData['someMessage'] = array('message'=>'Expense Added Successfully', 'type'=>'alert-success');                }else{                    $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                }            }            $bodyData['accounts'] = $this->accounts_model->driver($c_id);            $this->load->view('drivers/accounts', $bodyData);            $this->load->view('components/footer');        }    }    public function trips($driver_id = '' , $month = '')    {        if($driver_id == ''){            $this->index();        }else{            $this->load->model('accounts_model');            $headerData = array(                'title' => 'Virik-Logistics | Drivers | Accounts',                'page' => 'drivers',            );            if($month == ''){$month = date('Y-m');}            $bodyData = array(                'form_id'=>'',                'trips' => '',                'profile' => $this->drivers_model->driver($driver_id),                'someMessage' => '',                'section'=>'',                'month'=>$month,                'columns' => array(),            );            $bodyData['drivers'] = $this->drivers_model->drivers();            if($this->form_validation->run('add_trip_driver_expense') == true){                if( $this->drivers_model->add_trip_expense($driver_id) == true){                    $bodyData['someMessage'] = array('message'=>'Expense Added Successfully', 'type'=>'alert-success');                }else{                    $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                }            }            $bodyData['form_id'] = ($this->helper_model->last_id('trips_drivers_expenses')+1);            $bodyData['trips'] = $this->drivers_model->trips_by_month($driver_id, $month);            if(isset($_GET['print'])){                if(isset($_POST['check'])){                    $bodyData['trips'] = $this->helper_model->filter_records($bodyData['trips'], $_POST['check'],"trip_id");                }                if(isset($_POST['column'])){                    $bodyData['columns'] = $_POST['column'];                }                $this->load->view('drivers/components/print_trips', $bodyData);            }else{                $this->load->view('components/header', $headerData);                $this->load->view('drivers/trips', $bodyData);                $this->load->view('components/footer');            }        }    }    public function trips_expenses($driver_id, $month=''){        $headerData = array(            'title' => 'Virik-Logistics | Drivers | Expenses',            'page' => 'drivers'        );        if($month == ''){$month = date('Y-m');}        $bodyData = array(            'expenses' => '',            'profile' => $this->drivers_model->driver($driver_id),            'month' => $month,            'columns' => array(),        );        $bodyData['drivers'] = $this->drivers_model->drivers();        $bodyData['expenses'] = $this->drivers_model->trips_expenses_by_month($driver_id, $month);        if(isset($_GET['print'])){            if(isset($_POST['check'])){                $bodyData['expenses'] = $this->helper_model->filter_records($bodyData['expenses'], $_POST['check'],"expense_id");            }            if(isset($_POST['column'])){                $bodyData['columns'] = $_POST['column'];            }            $this->load->view('drivers/components/print_trips_expenses', $bodyData);        }else{            $this->load->view('components/header', $headerData);            $this->load->view('drivers/trips_expenses', $bodyData);            $this->load->view('components/footer');        }    }    public function contact($c_id = '', $req ='' )    {        if($c_id == ''){            $this->index();        }else{            $headerData = array(                'title' => 'Virik-Logistics | Carriage | Contact',                'page' => 'drivers',            );            $bodyData = array(                'contact' => $this->drivers_model->driver($c_id),            );            $this->load->view('components/header', $headerData);    //HEADER DATA            //check if we some data received of not against the request?            if($bodyData['contact'] != ''){                $this->load->view('drivers/contact', $bodyData);            }else{                $this->load->view('components/recordNotFound');            }            $this->load->view('components/footer');     //footer data        }    }    private function _loggedIn(){        /*if($this->admin_model->loggedIn() == 1){            return true;        }else{            return false;        }*/    }    function _create_captcha(){        /*$words = array( '2', '3', '4', '5', '6','7', '8', '9','0', 'a', 'b','z', 'n', 'b','x', 'y', 'v');        $count = 1;        $word = "";        while($count < 3){            $word = $word.$words[mt_rand(0, 16)];            $count++;        }        $vals = array(            'word'      => strtolower($word),            'img_path'	=> './captcha/',            'img_url'	=> base_url().'captcha/',            'font_path'	=> 'fonts/DENMARK.ttf',            'img_width'	=> '210',            'img_height' => 40,            'expiration' => 20        );        $cap = create_captcha($vals);        return $cap;*/    }    function _validate_driver_deleting($driver_id){        $used_in = '';        $where = "(trips.driver_id_1 = ".$driver_id." OR trips.driver_id_2 = ".$driver_id." OR trips.driver_id_3 = ".$driver_id.")";        $this->db->where($where);        $this->db->where('trips.active',1);        $trips = $this->db->get('trips')->num_rows();        if($trips >=1){            $used_in = 'Trips';        }        if($used_in != ''){            $this->form_validation->set_message('_validate_driver_deleting','This Driver is being used in the other parts of the system! e.g('.$used_in.').');            return false;        }        return true;    }    function _check_credentials($str, $data){        /*list($table, $userField, $passField)=explode('.', $data);        //You have to change this line below        if($this->input->post('username') != "" && $this->input->post('password') != "" && $this->input->post('confirmCaptcha') != "" && $this->form_validation->captcha_check($this->input->post('confirmCaptcha'), 'captcha') == true){            //////////////////////////////////////////////////////////////////////////////////////////////////            $userName = $userField.".".$this->input->post('username');            $password = $passField.".".$this->input->post('password');            $credentials = $this->admin_model->check_credentials($table, $userName, $password);            if($credentials == false){                $this->form_validation->set_message('_check_credentials','Invalid Username/Password. Please try again');                return false;            }else{                return true;            }        }else{            return true;        }*/    }    function _check_re_submission($form_id, $table){        if($this->helper_model->re_submission($table, $form_id) == true){            $this->form_validation->set_message('_check_re_submission','Entry failed because of form re-submission.');            return false;        }        return true;    }}/* End of file welcome.php *//* Location: ./application/controllers/welcome.php */