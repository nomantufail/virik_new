<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');include_once(APPPATH."controllers/parentController.php");class ManageCommissions extends ParentController {    //public variables...    public function __construct()    {        parent::__construct();    }    /* The default function that gets called when visiting the page */    public function index($section = '')    {        $id = (isset($_GET['id']))?$_GET['id']:'';        $customer = (isset($_GET['customer']))?$_GET['customer']:'';        $contractor = (isset($_GET['contractor']))?$_GET['contractor']:'';        $commission = (isset($_GET['commission']))?$_GET['commission']:'';        $keys = array(            'id'=>$id,            'customer'=>$customer,            'contractor'=>$contractor,            'commission'=>$commission,        );        //defining the sorting column        $sort = array(            'sort_by'=>(isset($_GET['sort_by']))?$_GET['sort_by']:'id',            'order' => (isset($_GET['order']))?$_GET['order']:'asc',        );        ///////////////////////////////////////////////////////////////        //counting total agents        $num_records = $this->manageCommissions_model->count_searched_contractor_customer_commissions($keys);        $num_records = ($num_records == 0)?1:$num_records;        $config = $this->helper_model->pagination_configs("manageCommissions/index/?", "contractor_customer_commissions", $num_records);        $this->pagination->initialize($config);        $pageNumber = 0;        if(isset($_GET['page'])){            $pageNumber = $_GET['page'];            if($pageNumber>=0){$pageNumber = $pageNumber;}else{ $pageNumber = 0;}        }        $headerData = array(            'title' => 'Virik-Logistics | Manage Commissions',            'page' => 'manageCommissions',        );        $bodyData = array(            'commissions' => '',            'contractors' => $this->carriageContractors_model->carriageContractors('asc'),            'customers' => $this->customers_model->customers(),            'section' => '',            'someMessage' => '',            'pages' => $this->pagination->create_links(),            'columns' => array(),        );        if($section == '' || $section == 'all'){$bodyData['section'] = 'all';}else if($section== 'add'){ $bodyData['section'] = 'add';}        //deleting the customer*****************//        if(isset($_GET['del'])){            $_POST['del'] = $_GET['del'];            $this->form_validation->set_rules('del', 'Delete Deal', 'required|numeric');            if ($this->form_validation->run() == true)            {                if( $this->helper_model->delete_record('contractor_customer_commissions',$_GET['del']) == true){                    $bodyData['someMessage'] = array('message'=>'Deal Deleted Successfully!', 'type'=>'alert-success');                }else{                    $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                }            }        }        //////////////////////////////////////////////////////////        if(isset($_POST['addCommission'])){            if($this->form_validation->run('add_contractor_customer_commission') == true){                if( $this->manageCommissions_model->add_contractor_customer_commission() == true){                    $bodyData['someMessage'] = array('message'=>'Commission Added Successfully!', 'type'=>'alert-success');                }else{                    $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                }            }        }        $bodyData['commissions'] = $this->manageCommissions_model->search_limited_contractor_customer_commissions($config["per_page"], $pageNumber, $keys, $sort);        if(isset($_GET['print'])){            if(isset($_POST['check'])){                $bodyData['commissions'] = $this->helper_model->filter_records($bodyData['commissions'], $_POST['check'],"id");            }            if(isset($_POST['column'])){                $bodyData['columns'] = $_POST['column'];            }            $this->load->view('manageCommissions/components/print_contractor_customer_commissions', $bodyData);        }else{            $this->load->view('components/header', $headerData);            $this->load->view('manageCommissions/welcome', $bodyData);            $this->load->view('components/footer');        }    }    public function contractor_company_commissions($section = '')    {        $id = (isset($_GET['id']))?$_GET['id']:'';        $company = (isset($_GET['company']))?$_GET['company']:'';        $contractor = (isset($_GET['contractor']))?$_GET['contractor']:'';        $commission_1 = (isset($_GET['commission_1']))?$_GET['commission_1']:'';        $commission_2 = (isset($_GET['wht']))?$_GET['wht']:'';        $commission_3 = (isset($_GET['commission_3']))?$_GET['commission_3']:'';        $keys = array(            'id'=>$id,            'company'=>$company,            'contractor'=>$contractor,            'commission_1'=>$commission_1,            'commission_2'=>$commission_2,            'commission_3'=>$commission_3,        );        //defining the sorting column        $sort = array(            'sort_by'=>(isset($_GET['sort_by']))?$_GET['sort_by']:'id',            'order' => (isset($_GET['order']))?$_GET['order']:'asc',        );        ///////////////////////////////////////////////////////////////        //counting total agents        $num_records = $this->manageCommissions_model->count_searched_contractor_company_commissions($keys);        $num_records = ($num_records == 0)?1:$num_records;        $config = $this->helper_model->pagination_configs("manageCommissions/contractor_company_commissions/?", "contractor_company_commissions", $num_records);        $this->pagination->initialize($config);        $pageNumber = 0;        if(isset($_GET['page'])){            $pageNumber = $_GET['page'];            if($pageNumber>=0){$pageNumber = $pageNumber;}else{ $pageNumber = 0;}        }        $headerData = array(            'title' => 'Virik-Logistics | Manage Commissions',            'page' => 'manageCommissions',        );        $bodyData = array(            'commissions' => '',            'contractors' => $this->carriageContractors_model->carriageContractors('asc'),            'companies' => $this->companies_model->companies(),            'pages' => $this->pagination->create_links(),            'section' => '',            'someMessage' => '',            'columns' => array(),        );        if($section == '' || $section == 'all'){$bodyData['section'] = 'all';}else if($section== 'add'){ $bodyData['section'] = 'add';}        //deleting the customer*****************//        if(isset($_GET['del'])){            $_POST['del'] = $_GET['del'];            $this->form_validation->set_rules('del', 'Delete Deal', 'required|numeric');            if ($this->form_validation->run() == true)            {                if( $this->helper_model->delete_record('contractor_company_commissions',$_GET['del']) == true){                    $bodyData['someMessage'] = array('message'=>'Deal Deleted Successfully!', 'type'=>'alert-success');                }else{                    $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                }            }        }        //////////////////////////////////////////////////////////        if(isset($_POST['addCommission'])){            if($this->form_validation->run('add_contractor_company_commission') == true){                if( $this->manageCommissions_model->add_contractor_company_commission() == true){                    $bodyData['someMessage'] = array('message'=>'Commission Added Successfully!', 'type'=>'alert-success');                }else{                    $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                }            }        }        $bodyData['commissions'] = $this->manageCommissions_model->search_limited_contractor_company_commissions($config["per_page"], $pageNumber, $keys, $sort);        if(isset($_GET['print'])){            if(isset($_POST['check'])){                $bodyData['commissions'] = $this->helper_model->filter_records($bodyData['commissions'], $_POST['check'],"id");            }            if(isset($_POST['column'])){                $bodyData['columns'] = $_POST['column'];            }            $this->load->view('manageCommissions/components/print_contractor_company_commissions', $bodyData);        }else{            $this->load->view('components/header', $headerData);            $this->load->view('manageCommissions/contractor_company', $bodyData);            $this->load->view('components/footer');        }    }    function customer_contractor_commission($customer_id, $contractor_id){        $commission = $this->manageCommissions_model->contractor_customer_commission($contractor_id, $customer_id);        $ar = array(            'freight_commission'=>($commission != null)?$commission->freight_commission: null,        );        echo json_encode($ar);    }    function company_contractor_commission($company_id, $contractor_id){        $commission = $this->manageCommissions_model->contractor_company_commission($contractor_id, $company_id);        $ar = array(            'commission_1'=>($commission != null)?$commission->commission_1: null,            'wht'=>($commission != null)?$commission->commission_2: null,        );        echo json_encode($ar);    }    function _create_captcha(){        /*$words = array( '2', '3', '4', '5', '6','7', '8', '9','0', 'a', 'b','z', 'n', 'b','x', 'y', 'v');        $count = 1;        $word = "";        while($count < 3){            $word = $word.$words[mt_rand(0, 16)];            $count++;        }        $vals = array(            'word'      => strtolower($word),            'img_path'	=> './captcha/',            'img_url'	=> base_url().'captcha/',            'font_path'	=> 'fonts/DENMARK.ttf',            'img_width'	=> '210',            'img_height' => 40,            'expiration' => 20        );        $cap = create_captcha($vals);        return $cap;*/    }    function _check_credentials($str, $data){        /*list($table, $userField, $passField)=explode('.', $data);        //You have to change this line below        if($this->input->post('username') != "" && $this->input->post('password') != "" && $this->input->post('confirmCaptcha') != "" && $this->form_validation->captcha_check($this->input->post('confirmCaptcha'), 'captcha') == true){            //////////////////////////////////////////////////////////////////////////////////////////////////            $userName = $userField.".".$this->input->post('username');            $password = $passField.".".$this->input->post('password');            $credentials = $this->admin_model->check_credentials($table, $userName, $password);            if($credentials == false){                $this->form_validation->set_message('_check_credentials','Invalid Username/Password. Please try again');                return false;            }else{                return true;            }        }else{            return true;        }*/    }    function _unique_company_deal(){        if($this->manageCommissions_model->contractor_company_commission($this->input->post('contractors'),$this->input->post('companies')) != null){            $this->form_validation->set_message('_unique_company_deal','A deal has already been made b/w these two agents');            return false;        }        return true;    }    function _unique_customer_deal(){        if($this->manageCommissions_model->contractor_customer_commission($this->input->post('contractors'),$this->input->post('customers')) != null){            $this->form_validation->set_message('_unique_customer_deal','A deal has already been made b/w these two agents');            return false;        }        return true;    }}/* End of file welcome.php *//* Location: ./application/controllers/welcome.php */